//tuple
#include<stdio.h>
#include<conio.h>
int a[10][10],ta[20][10],b[10][10],tb[20][10],tta[10][10],ttb[10][10];

//display
void display(int c[10][10],int n,int m)
{ for(int i=0;i<n;i++)
 {for(int j=0;j<m;j++)
 printf("%i   ",c[i][j]);
 printf("\n");
 } printf("\n");
 }

main()
{int n,m,p,q,i,j;
printf("enter no of rows and coloumns in 1st matrix");
scanf("%i%i",&n,&m);
printf("enter th elements\n");
 for(i=0;i<n;i++)
 for(j=0;j<m;j++)
 scanf("%i",&a[i][j]);
printf("matrix A\n");
display(a,n,m);
int count=0;
  for(i=0;i<n;i++)
  for(j=0;j<m;j++)
  if(a[i][j] !=0)
  count++;
  ta[0][0]=n;
  ta[0][1]=m;
  ta[0][2]=count;
  int k=1;
  for(i=0;i<n;i++)
  for(j=0;j<m;j++)
  {if (a[i][j]!=0)
    {ta[k][0]=i;
    ta[k][1]=j;
    ta[k][2]=a[i][j];
    k++;
}    }
  int ar=k;
  printf("tuple form of 1st matrix\n");
display(ta,ar,3);
//transpose
tta[0][0]=ta[0][1];
tta[0][1]=ta[0][0];
tta[0][2]=ta[0][2];
k=1;
for (i=0;i<ta[0][1];i++)
for(j=1;j<=ta[0][2];j++)
if(ta[j][1]==i)
{ tta[k][0]=ta[j][1] ;
  tta[k][1]=ta[j][0];
  tta[k][2]=ta[j][2];
  k++;
  }
printf("transpose of the 1st matrix\n");
display(tta,ar,3);
printf("enter no of rows and coloumns in2ndmatrix");
scanf("%i%i",&p,&q);
printf("enter th elements\n");
 for(i=0;i<p;i++)
 for(j=0;j<q;j++)
 scanf("%i",&b[i][j]);
 display(b,p,q);
 count=0;
  for( i=0;i<p;i++)
  for(j=0;j<q;j++)
  if(b[i][j] !=0)
  count++;
  tb[0][0]=p;
  tb[0][1]=q;
  tb[0][2]=count;
  k=1;
  for(i=0;i<p;i++)
  for(j=0;j<q;j++)
  {if (b[i][j]!=0)
    {tb[k][0]=i;
    tb[k][1]=j;
    tb[k][2]=b[i][j];
    k++;
}     }
     int br=k;
     printf("tuple form of 2nd matrix\n");
     display(tb,br,3);
ttb[0][0]=tb[0][1];
ttb[0][1]=tb[0][0];
ttb[0][2]=tb[0][2];
k=1;
for (i=0;i<tb[0][1];i++)
for(j=1;j<=tb[0][2];j++)
if(tb[j][1]==i)
{ ttb[k][0]=tb[j][1] ;
  ttb[k][1]=tb[j][0];
  ttb[k][2]=tb[j][2];
  k++;
  }
printf("transpose of the 2nd matrix\n");
display(ttb,br,3);
//add
int sun[10][10],s,r1,r2;
i=j=k=1;
if ((ta[0][0]==tb[0][0])&&(ta[0][1]==tb[0][1]))
{sun[0][0]=ta[0][0];
sun[0][1]=ta[0][1];
r1=ta[0][2];
r2=tb[0][2];
while(i<=r1&&j<=r2)
{ s=0;
    if (ta[i][0]==tb[j][0])
     {
        if(ta[i][1]==tb[j][1])
         {s=ta[i][2]+tb[j][2];
         if(s!=0)
           {sun[k][0]=ta[i][0];
            sun[k][1]=ta[i][1];
            sun[k][2]=s;
             k++;
            }
         i++;
         j++;
        }
        else if (ta[i][1]<tb[j][1])
         {sun[k][0]=ta[i][0];
          sun[k][1]=ta[i][1];
          sun[k][2]=ta[i][2];
          i++;
          k++;
          }
        else if (ta[i][1]>tb[j][1])
         {sun[k][0]=tb[j][0];
          sun[k][1]=tb[j][1];
          sun[k][2]=tb[j][2];
          j++;
          k++;
         }
    }else if (ta[i][0]<tb[j][0])
    {sun[k][0]=ta[i][0];
     sun[k][1]=ta[i][1];
     sun[k][2]=ta[i][2];
     i++;
    k++;
    }
    else if (ta[i][0]>tb[j][0])
    {sun[k][0]=tb[j][0];
     sun[k][1]=tb[j][1];
     sun[k][2]=tb[j][2];
     j++;
     k++;
    }
  if (i<=r1)
  { while(i<=r1)
     {sun[k][0]=ta[i][0];
  sun[k][1]=ta[i][1];
  sun[k][2]=ta[i][2];
  i++;
  k++;             
         
     }
  }
  else if (j<=r2)
  while(j<=r2)
  {sun[k][0]=tb[j][0];
  sun[k][1]=tb[j][1];
  sun[k][2]=tb[j][2];
  j++;
  k++;
  }
  }
  sun[0][2]=k-1;
 
 printf("sum of 2 matrices\n");
 display(sun,k,3);
}else printf("can not add");
getch();
}


